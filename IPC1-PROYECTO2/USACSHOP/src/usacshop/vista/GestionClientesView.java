/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package usacshop.vista;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

import usacshop.controlador.ClienteControlador;

/**
 *
 * @author Katherin Yasmin
 */
public class GestionClientesView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(GestionClientesView.class.getName());

    /**
     * Creates new form GestionClientesView
     */
    public GestionClientesView() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Gestión de Clientes - USAC SHOP");
        cargarClientesEnTabla();
    }
    
    private void cargarClientesEnTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        modelo.setRowCount(0); // limpia la tabla

        File archivo = new File("clientes.txt");
        if (!archivo.exists()) return;

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                if (linea.trim().isEmpty()) continue;
                String[] partes = linea.split(",", -1);
                if (partes.length >= 5) {
                    modelo.addRow(new Object[]{ partes[0], partes[1], partes[2], partes[3], partes[4] });
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar los clientes: " + e.getMessage());
        }
    }
    
    private void modificarCliente(){    //para modificar a los clientes
        int filaSeleccionada = tablaClientes.getSelectedRow();
        if (filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this, "Seleccione un cliente para modificar.");
            return;
        }

        String codigo = tablaClientes.getValueAt(filaSeleccionada, 0).toString();
        String nombreActual = tablaClientes.getValueAt(filaSeleccionada, 1).toString();
        String generoActual = tablaClientes.getValueAt(filaSeleccionada, 2).toString();
        String fechaActual = tablaClientes.getValueAt(filaSeleccionada, 3).toString();
        String contrasenaActual = tablaClientes.getValueAt(filaSeleccionada, 4).toString();

        String nuevoNombre = JOptionPane.showInputDialog(this, "Nuevo nombre:", nombreActual);
        if (nuevoNombre == null || nuevoNombre.trim().isEmpty()) return;

        String nuevoGenero = JOptionPane.showInputDialog(this, "Nuevo género (Femenino/Masculino):", generoActual);
        if (nuevoGenero == null || nuevoGenero.trim().isEmpty()) return;

        String nuevaFecha = JOptionPane.showInputDialog(this, "Nueva fecha de nacimiento:", fechaActual);
        if (nuevaFecha == null || nuevaFecha.trim().isEmpty()) return;

        String nuevaContrasena = JOptionPane.showInputDialog(this, "Nueva contraseña:", contrasenaActual);
        if (nuevaContrasena == null || nuevaContrasena.trim().isEmpty()) return;

        boolean exito = ClienteControlador.actualizarCliente(codigo, nuevoNombre, nuevoGenero, nuevaFecha, nuevaContrasena);
        if (exito){
            JOptionPane.showMessageDialog(this, "Cliente modificado correctamente.");
            cargarClientesEnTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Error actualizando el cliente.");
        }
    }
    
    private void eliminarCliente(){
        int filaSeleccionada = tablaClientes.getSelectedRow();
        if (filaSeleccionada == -1){
            JOptionPane.showMessageDialog(this, "Seleccione un cliente para eliminar.");
            return;
        }

        String codigo = tablaClientes.getValueAt(filaSeleccionada, 0).toString();
        int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar al cliente con código " + codigo + "?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) return;

        boolean exito = ClienteControlador.eliminarCliente(codigo);
        if (exito){
            JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");
            cargarClientesEnTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Error eliminando el cliente.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnRegistrarCliente1 = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Gestion de Clientes");

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Genero", "Fecha Nacimiento", "Acciones"
            }
        ));
        jScrollPane1.setViewportView(tablaClientes);

        btnRegistrarCliente1.setText("Registrar");
        btnRegistrarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCliente1ActionPerformed(evt);
            }
        });

        btnModificarCliente.setText("Modificar");
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setText("Eliminar");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnRegistrarCliente1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModificarCliente)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarCliente)
                                .addGap(18, 18, 18)
                                .addComponent(btnRegresar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrarCliente1)
                    .addComponent(btnModificarCliente)
                    .addComponent(btnEliminarCliente)
                    .addComponent(btnRegresar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCliente1ActionPerformed
        // TODO add your handling code here:
        RegistrarClienteView registrar = new RegistrarClienteView();
        registrar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegistrarCliente1ActionPerformed

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        // TODO add your handling code here:
        modificarCliente();
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        // TODO add your handling code here:
        eliminarCliente();
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        VendedorView vendedor = new VendedorView();
        vendedor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GestionClientesView().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnRegistrarCliente1;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
